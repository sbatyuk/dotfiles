"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Vundle initialization
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set nocompatible " use Vim settings, rather than Vi settings
set rtp+=~/.vim/bundle/Vundle.vim " set the runtime path to include Vundle
set shell=/bin/bash " set shell to bash explicitly due to fish incompatibility
let mapleader = "\<Space>" " remap <leader> to <space>
filetype off
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Plugins list
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
Plugin 'Valloric/YouCompleteMe'
Plugin 'jiangmiao/auto-pairs'
Plugin 'rafi/awesome-vim-colorschemes'
Plugin 'vim-syntastic/syntastic'
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'
Plugin 'airblade/vim-gitgutter'
Plugin 'scrooloose/nerdtree'
Plugin 'Yggdroot/indentLine'
Plugin 'djoshea/vim-autoread'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'ntpeters/vim-better-whitespace'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'scrooloose/nerdcommenter'
Plugin 'Vimjas/vim-python-pep8-indent'
Plugin 'wincent/command-t'
Plugin 'sbdchd/neoformat'
Plugin 'pangloss/vim-javascript'
Plugin 'leafgarland/typescript-vim'
Plugin 'mxw/vim-jsx'
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Vundle finalisation
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
call vundle#end()
filetype plugin indent on

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Plugins configurations
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" ================ Powerline configuration ========================
python from powerline.vim import setup as powerline_setup
python powerline_setup()
python del powerline_setup

" ================ vim-better-whitespace configuration =========================
autocmd BufEnter * EnableStripWhitespaceOnSave

" =========== vim-tmux-navigator configuration ====================
let g:tmux_navigator_disable_when_zoomed = 1

" ================ YouCompleteMe configuration ====================
let g:ycm_autoclose_preview_window_after_insertion = 1
let g:ycm_autoclose_preview_window_after_completion = 1

" ================ Syntastic configuration ========================
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" ================ GitGutter configuration ========================
let g:gitgutter_map_keys = 0

" ================ Snippet engine configuration ===================
let g:UltiSnipsExpandTrigger="<c-j>"
let g:UltiSnipsJumpForwardTrigger="<c-j>"
let g:UltiSnipsJumpBackwardTrigger="<c-k>"

" ================ NERDTree configuration =========================
let NERDTreeQuitOnOpen = 1 " automatically close NerdTree when you open a file
let NERDTreeMinimalUI = 1 " disable that old “Press ? for help”
let NERDTreeShowHidden = 1
let NERDTreeIgnore = ['\.swp$', '\.DS_Store$', '\.git$', '\.node_modules$']
" map control-o, to toggle the tree
map <C-o> :NERDTreeToggle<CR>
" open NERDTree when vim starts up with no files specified
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
" close vim if the only window left open is a NERDTree
autocmd bufenter * if (winnr("$") == 1 &&
            \ exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" ================ Neoformat configuration =========================
autocmd BufWritePre *.js Neoformat
autocmd BufWritePre *.ts Neoformat

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Mappings (Always use non-recursive mappings, i.e. "nore")
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" ================ NORMAL MODE =========================

" EXCEPTION of using recursive mapping to refresh command-t and nerdtree
nmap <leader>r
    \ :NERDTreeFocus<CR>R
    \ :sleep 100m<CR>
    \ :q<CR>
    \ :CommandTFlush<CR>:<backspace>
    \ :echo "File cache updated!"<CR>

" clear search pattern with <leader> and <space>
nnoremap <leader><space> :noh<CR>:<backspace>

" open vertical or horizontal splits with <leader> and \ or -
nnoremap <leader>\ :vs<CR>
nnoremap <leader>- :split<CR>

" resize panes with <leader> and jklh=
nnoremap <leader>= <C-W>=
nnoremap <leader>j <C-W>5+
nnoremap <leader>k <C-W>5-
nnoremap <leader>l <C-W>5>
nnoremap <leader>h <C-W>5<

" save the file with enter
nnoremap <CR> :write<CR>

" reload .vimrc with <leader> and R
nnoremap <leader>R :source ~/.vimrc<cr>:noh<CR>:echo "vim reloaded!"<cr>

" quit files with <leader> and q
nnoremap <leader>q :q<cr>

" switch between tabs with Shift-h and Shift-l
nnoremap H gT
nnoremap L gt

" go to end of line with e
nnoremap e $

" go to first non-blank charachter with 0
nnoremap 0 ^

" toggle paste mode with <leader> and p
set pastetoggle=<leader>p

" map semicolon to colon to avoid the extra shift to go to cmd mode
nnoremap ; :

" ================ INSERT MODE =========================

" exit INSERT mode with jj
inoremap jj <ESC>

" ================ UNBINDINGS =========================

" training for e usage instead of $
nnoremap $ <Nop>
" removing the stupid error of marker not set when accidentally hitting ';
nnoremap ' <Nop>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => General configurations
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set number " show line numbers next to lines
set backspace=indent,eol,start  " allow backspace in insert mode
set showcmd " show commands typed in vim
set nobackup " this has to be disabled for writebackup to work as intended
set writebackup " write backup before overwriting a file, delete it afterwards
set noswapfile " no no no no no no no no!
set scrolloff=15 " set 15 lines to the cursor when moving vertically using j/k
set hlsearch " highlight search patterns
set incsearch " highlight search patterns as you type
set ignorecase " ignore case when searching...
set smartcase " ...unless we type a capital
set nowrap " don't wrap lines
set wildmode=list:longest,full " bash-like tab completion
set wildmenu " visual autocomplete for command menu
set updatetime=300 " set Vim's updatetime delay
set laststatus=2 " always display the statusline
set showtabline=1 " only show tabline when there's more than 1 tab
set noshowmode " hide default mode text (e.g. INSERT under the statusline)
set clipboard=unnamed " making Vim work with system clipboard
set backupcopy=yes " preserving soft/hard links https://goo.gl/QDC1sU
set visualbell " suppress audio/visual error bell

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Indentation configurations
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set tabstop=4 " number of VISUAL spaces for each tab respresentation
set softtabstop=4 " number of spaces in tab when editing
set shiftwidth=4 " number of spaces to use for auto indent
set expandtab " tab becomes a shortcut to insert four spaces

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Misc
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
syntax on " turn on syntax highlighting
au VimEnter * NoMatchParen " disable matchparen plugin at startup
silent! colorscheme dracula " set desired color scheme

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Autogroups
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
augroup configgroup
    " clears all the autocmd's for the group
    autocmd!
    autocmd FileType javascript setlocal ts=2 sts=2
    autocmd BufEnter Makefile setlocal noexpandtab
augroup END
